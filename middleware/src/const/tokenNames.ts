// Hardcoded token name mappings
// Derived from previous GMX token list and common token names
export const TOKEN_SYMBOL_TO_NAME: Record<string, string> = {
  // From the provided list
  AAVE: 'Aave',
  ADA: 'Cardano',
  AI16Z: 'ai16z',
  AIXBT: 'AIXBT by Virtuals',
  ANIME: 'Animecoin',
  APE: 'ApeCoin',
  APT: 'Aptos',
  ARB: 'Arbitrum',
  ATOM: 'Cosmos',
  AVAX: 'Avalanche',
  BCH: 'Bitcoin Cash',
  BERA: 'Berachain',
  BNB: 'BNB',
  BOME: 'Book of Meme',
  BONK: 'Bonk',
  BTC: 'Bitcoin',
  WBTC: 'Wrapped Bitcoin',
  CAKE: 'PancakeSwap',
  CRV: 'Curve DAO Token',
  DAI: 'Dai',
  DOGE: 'Dogecoin',
  DOLO: 'Dolomite',
  DOT: 'Polkadot',
  DYDX: 'dYdX',
  EIGEN: 'Eigen',
  ENA: 'Ethena Governance Token',
  FARTCOIN: 'Fartcoin',
  FET: 'Artificial Superintelligence Alliance',
  FIL: 'Filecoin',
  FLOKI: 'Floki Inu',
  FRAX: 'Frax',
  HYPE: 'Hyperliquid',
  ICP: 'Internet Computer',
  INJ: 'Injective',
  JUP: 'Jupiter',
  LDO: 'Lido DAO',
  LINK: 'Chainlink',
  LTC: 'Litecoin',
  MELANIA: 'Melania Meme',
  MEME: 'Memecoin',
  MEW: 'cat in a dogs world',
  MIM: 'Magic Internet Money',
  MKR: 'Maker',
  MNT: 'Mantle',
  MOODENG: 'Moo Deng',
  NEAR: 'NEAR Protocol',
  OM: 'MANTRA',
  ONDO: 'Ondo',
  OP: 'Optimism',
  ORDI: 'ORDI',
  PENDLE: 'Pendle',
  PENGU: 'Pudgy Penguins',
  PEPE: 'Pepe',
  PI: 'Pi Network',
  POL: 'Polygon',
  PUMP: 'Pump.fun',
  RENDER: 'Render Token',
  S: 'Sonic',
  SATS: '1000SATS',
  SEI: 'Sei',
  SHIB: 'Shiba Inu',
  SOL: 'Solana',
  SPX6900: 'SPX6900',
  STX: 'Stacks',
  SUI: 'Sui',
  TAO: 'Bittensor',
  tBTC: 'tBTC',
  TIA: 'Celestia',
  TON: 'Toncoin',
  TRUMP: 'Official Trump',
  TRX: 'TRON',
  UNI: 'Uniswap',
  USDC: 'USD Coin',
  'USDC.E': 'Bridged USDC',
  USDe: 'Ethena USDe',
  USDT: 'Tether',
  VIRTUAL: 'Virtuals Protocol',
  WETH: 'Wrapped Ether',
  WIF: 'dogwifhat',
  WLD: 'Worldcoin',
  wstETH: 'Wrapped stETH',
  XLM: 'Stellar',
  XMR: 'Monero',
  XRP: 'XRP',
  ZRO: 'LayerZero',

  // Additional tokens that might be needed
  GMX: 'GMX',
  PUPPET: 'Puppet'
} as const

// Helper function to get token name with fallback
export function getTokenName(symbol: string): string {
  return TOKEN_SYMBOL_TO_NAME[symbol] || symbol
}
